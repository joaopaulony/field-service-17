
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nqjasunitrozippselhj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5xamFzdW5pdHJvemlwcHNlbGhqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQzMjMzNTYsImV4cCI6MjA1OTg5OTM1Nn0.QR6Gnc63tmmCp-tyL4B_yJJ-XELuOxnaPXjNhcqAdWo";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Função de upload de arquivos para o bucket work_orders
export const uploadWorkOrderFile = async (file: File, path: string): Promise<string | null> => {
  try {
    const fileExt = file.name.split('.').pop();
    const fileName = `${Math.random().toString(36).substring(2, 15)}_${Date.now()}.${fileExt}`;
    const filePath = `${path}/${fileName}`;
    
    const { error, data } = await supabase.storage
      .from('work_orders')
      .upload(filePath, file, {
        cacheControl: '3600',
        upsert: false
      });
      
    if (error) {
      console.error('Erro ao fazer upload:', error);
      return null;
    }
    
    const { data: { publicUrl } } = supabase.storage
      .from('work_orders')
      .getPublicUrl(filePath);
      
    return publicUrl;
  } catch (error) {
    console.error('Erro ao processar upload:', error);
    return null;
  }
};
